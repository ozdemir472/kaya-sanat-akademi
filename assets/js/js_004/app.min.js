var app = {
    id: "#app",
    isMobile: /Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent) || window.innerWidth < 992,
    bootstrap: {
        tooltip: {
            attr: 'data-bs-toggle="tooltip"'
        },
        popover: {
            attr: 'data-bs-toggle="popover"'
        },
        modal: {
            attr: 'data-bs-toggle="modal"',
            dismissAttr: 'data-bs-dismiss="modal"',
            event: {
                hidden: "hidden.bs.modal"
            }
        },
        nav: {
            class: "nav",
            tabs: {
                class: "nav-tabs",
                activeClass: "active",
                itemClass: "nav-item",
                itemLinkClass: "nav-link"
            }
        }
    },
    header: {
        id: "#header",
        class: "app-header",
        hasScrollClass: "has-scroll"
    },
    sidebar: {
        id: "#sidebar",
        class: "app-sidebar",
        scrollBar: {
            localStorage: "appSidebarScrollPosition",
            dom: ""
        },
        menu: {
            class: "menu",
            initAttr: "data-init",
            animationTime: 0,
            itemClass: "menu-item",
            itemLinkClass: "menu-link",
            hasSubClass: "has-sub",
            activeClass: "active",
            expandingClass: "expanding",
            expandClass: "expand",
            submenu: {
                class: "menu-submenu"
            }
        },
        mobile: {
            toggleAttr: 'data-toggle="app-sidebar-mobile"',
            dismissAttr: 'data-dismiss="app-sidebar-mobile"',
            toggledClass: "app-sidebar-mobile-toggled",
            closedClass: "app-sidebar-mobile-closed",
            backdrop: {
                class: "app-sidebar-mobile-backdrop"
            }
        },
        minify: {
            toggleAttr: 'data-toggle="app-sidebar-minify"',
            toggledClass: "app-sidebar-minified",
            cookieName: "app-sidebar-minified"
        },
        floatSubmenu: {
            id: "#app-sidebar-float-submenu",
            dom: "",
            timeout: "",
            class: "app-sidebar-float-submenu",
            container: {
                class: "app-sidebar-float-submenu-container"
            },
            arrow: {
                id: "#app-sidebar-float-submenu-arrow",
                class: "app-sidebar-float-submenu-arrow"
            },
            line: {
                id: "#app-sidebar-float-submenu-line",
                class: "app-sidebar-float-submenu-line"
            },
            overflow: {
                class: "overflow-scroll mh-100vh"
            }
        },
        search: {
            class: "menu-search",
            toggleAttr: 'data-sidebar-search="true"',
            hideClass: "d-none",
            foundClass: "has-text"
        },
        transparent: {
            class: "app-sidebar-transparent"
        }
    },
    scrollBar: {
        attr: 'data-scrollbar="true"',
        skipMobileAttr: "data-skip-mobile",
        heightAttr: "data-height",
        wheelPropagationAttr: "data-wheel-propagation"
    },
    content: {
        id: "#content",
        class: "app-content",
        fullHeight: {
            class: "app-content-full-height"
        },
        fullWidth: {
            class: "app-content-full-width"
        }
    },
    layout: {
        sidebarLight: {
            class: "app-with-light-sidebar"
        },
        sidebarEnd: {
            class: "app-with-end-sidebar"
        },
        sidebarWide: {
            class: "app-with-wide-sidebar"
        },
        sidebarMinified: {
            class: "app-sidebar-minified"
        },
        sidebarTwo: {
            class: "app-with-two-sidebar"
        },
        withoutHeader: {
            class: "app-without-header"
        },
        withoutSidebar: {
            class: "app-without-sidebar"
        },
        topMenu: {
            class: "app-with-top-menu"
        },
        boxedLayout: {
            class: "boxed-layout"
        }
    },
    scrollToTopBtn: {
        showClass: "show",
        heightShow: 200,
        toggleAttr: 'data-toggle="scroll-to-top"',
        scrollSpeed: 500
    },
    scrollTo: {
        attr: 'data-toggle="scroll-to"',
        target: "data-target",
        linkTarget: "href"
    },
    themePanel: {
        class: "app-theme-panel",
        toggleAttr: 'data-toggle="theme-panel-expand"',
        cookieName: "app-theme-panel-expand",
        activeClass: "active",
        themeListCLass: "app-theme-list",
        themeListItemCLass: "app-theme-list-item",
        theme: {
            toggleAttr: 'data-toggle="theme-selector"',
            classAttr: "data-theme-class",
            cookieName: "app-theme",
            activeClass: "active"
        },
        themeDarkMode: {
            toggleAttr: 'data-toggle="theme-dark-mode"',
            cookieName: "app-dark-mode",
            attributeName: "data-bs-theme",
            attributeValue: "dark"
        }
    },
    toggleClass: {
        toggleAttr: "data-toggle-class",
        targetAttr: "data-toggle-target"
    },
    toggleClass: {
        toggleAttr: "data-toggle-class",
        targetAttr: "data-toggle-target"
    },
    dismissClass: {
        toggleAttr: "data-dismiss-class",
        targetAttr: "data-dismiss-target"
    },
    variablePrefix: "bs-",
    variableFontList: ["body-font-family", "body-font-size", "body-font-weight", "body-line-height"],
    variableColorList: ["theme", "theme-rgb", "theme-color", "theme-color-rgb", "default", "default-rgb", "primary", "primary-rgb", "primary-bg-subtle", "primary-text", "primary-border-subtle", "secondary", "secondary-rgb", "secondary-bg-subtle", "secondary-text", "secondary-border-subtle", "success", "success-rgb", "success-bg-subtle", "success-text", "success-border-subtle", "warning", "warning-rgb", "warning-bg-subtle", "warning-text", "warning-border-subtle", "info", "info-rgb", "info-bg-subtle", "info-text", "info-border-subtle", "danger", "danger-rgb", "danger-bg-subtle", "danger-text", "danger-border-subtle", "light", "light-rgb", "light-bg-subtle", "light-text", "light-border-subtle", "dark", "dark-rgb", "dark-bg-subtle", "dark-text", "dark-border-subtle", "white", "white-rgb", "black", "black-rgb", "teal", "teal-rgb", "indigo", "indigo-rgb", "purple", "purple-rgb", "yellow", "yellow-rgb", "pink", "pink-rgb", "cyan", "cyan-rgb", "gray-100", "gray-200", "gray-300", "gray-400", "gray-500", "gray-600", "gray-700", "gray-800", "gray-900", "gray-100-rgb", "gray-200-rgb", "gray-300-rgb", "gray-400-rgb", "gray-500-rgb", "gray-600-rgb", "gray-700-rgb", "gray-800-rgb", "gray-900-rgb", "muted", "muted-rgb", "emphasis-color", "emphasis-color-rgb", "component-bg", "component-bg-rgb", "component-color", "component-color-rgb", "body-bg", "body-bg-rgb", "body-color", "body-color-rgb", "heading-color", "secondary-color", "secondary-color-rgb", "secondary-bg", "secondary-bg-rgb", "tertiary-color", "tertiary-color-rgb", "tertiary-bg", "tertiary-bg-rgb", "link-color", "link-color-rgb", "link-hover-color", "link-hover-color-rgb", "border-color", "border-color-translucent"],
    font: {},
    color: {},
    card: {
        expand: {
            status: !1,
            toggleAttr: 'data-toggle="card-expand"',
            toggleTitle: "Expand / Compress",
            class: "card-expand"
        }
    },
    init: {
        attr: "data-init",
        class: "app-init"
    }
},
handleScrollbar = function() {
    for (var e = document.querySelectorAll("[" + app.scrollBar.attr + "]"), t = 0; t < e.length; t++) generateScrollbar(e[t])
},
generateScrollbar = function(e) {
    var t;
    e.scrollbarInit || app.isMobile && e.getAttribute(app.scrollBar.skipMobileAttr) || (t = e.getAttribute(app.scrollBar.heightAttr) ? e.getAttribute(app.scrollBar.heightAttr) : e.offsetHeight, e.style.height = t, e.scrollbarInit = !0, app.isMobile ? e.style.overflowX = "scroll" : (t = !!e.getAttribute(app.scrollBar.wheelPropagationAttr) && e.getAttribute(app.scrollBar.wheelPropagationAttr), e.closest("." + app.sidebar.class) && 0 !== e.closest("." + app.sidebar.class).length ? app.sidebar.scrollBar.dom = new PerfectScrollbar(e, {
        wheelPropagation: t
    }) : new PerfectScrollbar(e, {
        wheelPropagation: t
    })), e.setAttribute(app.init.attr, !0), e.classList.remove("invisible"))
},
handleSidebarMenuToggle = function(a) {
    a.map(function(e) {
        e.onclick = function(e) {
            e.preventDefault();
            var t = this.nextElementSibling,
                e = (a.map(function(e) {
                    e = e.nextElementSibling;
                    e !== t && (e.style.display = "none", e.closest("." + app.sidebar.menu.itemClass).classList.remove(app.sidebar.menu.expandClass))
                }), t.closest("." + app.sidebar.menu.itemClass));
            e.classList.contains(app.sidebar.menu.expandClass) || e.classList.contains(app.sidebar.menu.activeClass) && !t.style.display ? (e.classList.remove(app.sidebar.menu.expandClass), t.style.display = "none") : (e.classList.add(app.sidebar.menu.expandClass), t.style.display = "block")
        }
    })
},
handleSidebarMenu = function() {
    var e = "." + app.sidebar.class + " ." + app.sidebar.menu.class + " > ." + app.sidebar.menu.itemClass + "." + app.sidebar.menu.hasSubClass,
        t = " > ." + app.sidebar.menu.submenu.class + " > ." + app.sidebar.menu.itemClass + "." + app.sidebar.menu.hasSubClass,
        a = e + " > ." + app.sidebar.menu.itemLinkClass,
        a = [].slice.call(document.querySelectorAll(a));
    handleSidebarMenuToggle(a);
    a = [].slice.call(document.querySelectorAll(e + t + " > ." + app.sidebar.menu.itemLinkClass));
    handleSidebarMenuToggle(a);
    a = [].slice.call(document.querySelectorAll(e + t + t + " > ." + app.sidebar.menu.itemLinkClass));
    handleSidebarMenuToggle(a)
},
handleSidebarScrollMemory = function() {
    if (!app.isMobile) try {
        var e, t;
        "undefined" != typeof Storage && "undefined" != typeof localStorage && (e = document.querySelector("." + app.sidebar.class + " [" + app.scrollBar.attr + "]")) && (e.onscroll = function() {
            localStorage.setItem(app.sidebar.scrollBar.localStorage, this.scrollTop)
        }, t = localStorage.getItem(app.sidebar.scrollBar.localStorage)) && (document.querySelector("." + app.sidebar.class + " [" + app.scrollBar.attr + "]").scrollTop = t)
    } catch (e) {
        console.log(e)
    }
},
handleCardAction = function() {
    if (app.card.expand.status) return !1;
    app.card.expand.status = !0;
    [].slice.call(document.querySelectorAll("[" + app.card.expand.toggleAttr + "]")).map(function(e) {
        return e.onclick = function(e) {
            e.preventDefault();
            var e = this.closest(".card"),
                t = app.card.expand.class;
            document.body.classList.contains(t) && e.classList.contains(t) ? (e.removeAttribute("style"), e.classList.remove(t), document.body.classList.remove(t)) : (document.body.classList.add(t), e.classList.add(t)), window.dispatchEvent(new Event("resize"))
        }, new bootstrap.Tooltip(e, {
            title: app.card.expand.toggleTitle,
            placement: "bottom",
            trigger: "hover",
            container: "body"
        })
    })
},
handelTooltipPopoverActivation = function() {
    [].slice.call(document.querySelectorAll("[" + app.bootstrap.tooltip.attr + "]")).map(function(e) {
        return new bootstrap.Tooltip(e)
    }), [].slice.call(document.querySelectorAll("[" + app.bootstrap.popover.attr + "]")).map(function(e) {
        return new bootstrap.Popover(e)
    })
},
handleScrollToTopButton = function() {
    var a = [].slice.call(document.querySelectorAll("[" + app.scrollToTopBtn.toggleAttr + "]"));
    document.onscroll = function() {
        var e = document.documentElement,
            t = (window.pageYOffset || e.scrollTop) - (e.clientTop || 0),
            e = (a.map(function(e) {
                t >= app.scrollToTopBtn.heightShow ? e.classList.contains(app.scrollToTopBtn.showClass) || e.classList.add(app.scrollToTopBtn.showClass) : e.classList.remove(app.scrollToTopBtn.showClass)
            }), document.querySelectorAll(app.id)[0]);
        0 < t ? e.classList.add(app.header.hasScrollClass) : e.classList.remove(app.header.hasScrollClass)
    }, a.map(function(e) {
        e.onclick = function(e) {
            e.preventDefault(), window.scrollTo({
                top: 0,
                behavior: "smooth"
            })
        }
    })
},
hexToRgba = function(e, t = 1) {
    if (/^#([A-Fa-f0-9]{3}){1,2}$/.test(e)) return "rgba(" + [(e = "0x" + (e = 3 == (e = e.substring(1).split("")).length ? [e[0], e[0], e[1], e[1], e[2], e[2]] : e).join("")) >> 16 & 255, e >> 8 & 255, 255 & e].join(",") + "," + t + ")";
    throw new Error("Bad Hex")
},
handleScrollTo = function() {
    [].slice.call(document.querySelectorAll("[" + app.scrollTo.attr + "]")).map(function(a) {
        a.onclick = function(e) {
            e.preventDefault();
            var e = a.getAttribute(app.scrollTo.target) ? this.getAttribute(app.scrollTo.target) : this.getAttribute(app.scrollTo.linkTarget),
                e = document.querySelectorAll(e)[0],
                t = document.querySelectorAll(app.header.id)[0].offsetHeight;
            e && (e = e.offsetTop - t - 24, window.scrollTo({
                top: e,
                behavior: "smooth"
            }))
        }
    })
},
handleToggleClass = function() {
    [].slice.call(document.querySelectorAll("[" + app.toggleClass.toggleAttr + "]")).map(function(e) {
        e.onclick = function(e) {
            e.preventDefault();
            var e = this.getAttribute(app.toggleClass.toggleAttr),
                t = this.getAttribute(app.dismissClass.toggleAttr),
                a = document.querySelector(this.getAttribute(app.toggleClass.targetAttr));
            t && (a.classList.contains(e) || a.classList.contains(t)) ? (a.classList.contains(e) ? a.classList.remove(e) : a.classList.add(e), a.classList.contains(t) ? a.classList.remove(t) : a.classList.add(t)) : a.classList.contains(e) ? a.classList.remove(e) : a.classList.add(e)
        }
    })
},
handleThemePanel = function() {
    var e, t;
    [].slice.call(document.querySelectorAll("[" + app.themePanel.toggleAttr + "]")).map(function(e) {
        e.onclick = function(e) {
            e.preventDefault();
            var e = document.querySelector("." + app.themePanel.class),
                t = !1;
            e.classList.contains(app.themePanel.activeClass) ? e.classList.remove(app.themePanel.activeClass) : (e.classList.add(app.themePanel.activeClass), t = !0), Cookies && Cookies.set(app.themePanel.cookieName, t)
        }
    }), !Cookies || "true" != (e = Cookies.get(app.themePanel.cookieName)) && void 0 !== e || (e = document.querySelector("[" + app.themePanel.toggleAttr + "]")) && e.click(), [].slice.call(document.querySelectorAll("." + app.themePanel.class + " [" + app.themePanel.theme.toggleAttr + "]")).map(function(e) {
        e.onclick = function() {
            for (var e = 0; e < document.body.classList.length; e++) {
                var t = document.body.classList[e]; - 1 < t.search("theme-") && document.body.classList.remove(t)
            }
            var a = this.getAttribute(app.themePanel.theme.classAttr),
                s = [].slice.call(document.querySelectorAll("." + app.themePanel.class + " [" + app.themePanel.theme.toggleAttr + "]"));
            a && document.body.classList.add(a), s.map(function(e) {
                e.getAttribute(app.themePanel.theme.classAttr) != a && e.closest("." + app.themePanel.themeListItemCLass).classList.remove(app.themePanel.theme.activeClass)
            }), this.closest("." + app.themePanel.themeListItemCLass).classList.add(app.themePanel.theme.activeClass), Cookies && (Cookies.set(app.themePanel.theme.cookieName, a), handleCssVariable(), document.dispatchEvent(new Event("theme-reload")))
        }
    }), Cookies && Cookies.get(app.themePanel.theme.cookieName) && (t = document.querySelector("." + app.themePanel.class + " [" + app.themePanel.theme.toggleAttr + "][" + app.themePanel.theme.classAttr + '="' + Cookies.get(app.themePanel.theme.cookieName) + '"]')) && (t.click(), handleCssVariable(), document.dispatchEvent(new Event("theme-reload"))), [].slice.call(document.querySelectorAll("." + app.themePanel.class + " [" + app.themePanel.themeDarkMode.toggleAttr + "]")).map(function(e) {
        e.onchange = function() {
            this.checked ? document.querySelector("html").setAttribute(app.themePanel.themeDarkMode.attributeName, app.themePanel.themeDarkMode.attributeValue) : document.querySelector("html").removeAttribute(app.themePanel.themeDarkMode.attributeName), Cookies.set(app.themePanel.themeDarkMode.cookieName, this.checked ? 1 : ""), handleCssVariable(), document.dispatchEvent(new CustomEvent("theme-reload"))
        }
    }), Cookies && Cookies.get(app.themePanel.themeDarkMode.cookieName) && (t = document.querySelector("." + app.themePanel.class + " [" + app.themePanel.themeDarkMode.toggleAttr + "]")) && (t.checked = !0, t.onchange())
},
handleCssVariable = function() {
    var e = getComputedStyle(document.body);
    if (app.variableFontList && app.variablePrefix)
        for (var t = 0; t < app.variableFontList.length; t++) app.font[app.variableFontList[t].replace(/-([a-z|0-9])/g, (e, t) => t.toUpperCase())] = e.getPropertyValue("--" + app.variablePrefix + app.variableFontList[t]).trim();
    if (app.variableColorList && app.variablePrefix)
        for (t = 0; t < app.variableColorList.length; t++) app.color[app.variableColorList[t].replace(/-([a-z|0-9])/g, (e, t) => t.toUpperCase())] = e.getPropertyValue("--" + app.variablePrefix + app.variableColorList[t]).trim()
},
handleToggleClass = function() {
    [].slice.call(document.querySelectorAll("[" + app.toggleClass.toggleAttr + "]")).map(function(e) {
        e.onclick = function(e) {
            e.preventDefault();
            var e = this.getAttribute(app.toggleClass.toggleAttr),
                t = this.getAttribute(app.dismissClass.toggleAttr),
                a = document.querySelector(this.getAttribute(app.toggleClass.targetAttr));
            t && (a.classList.contains(e) || a.classList.contains(t)) ? (a.classList.contains(e) ? a.classList.remove(e) : a.classList.add(e), a.classList.contains(t) ? a.classList.remove(t) : a.classList.add(t)) : a.classList.contains(e) ? a.classList.remove(e) : a.classList.add(e)
        }
    })
},
App = {
    init: function() {
        this.initComponent(), this.initSidebar(), this.initAppLoad()
    },
    initAppLoad: function() {
        document.querySelector("body").classList.add(app.init.class)
    },
    initSidebar: function() {
        handleSidebarMenu(), handleSidebarScrollMemory()
    },
    initComponent: function() {
        handleScrollbar(), handleScrollToTopButton(), handleScrollTo(), handleCardAction(), handelTooltipPopoverActivation(), handleToggleClass(), handleThemePanel(), handleCssVariable(), handleToggleClass()
    },
    scrollTop: function() {
        window.scrollTo({
            top: 0,
            behavior: "smooth"
        })
    }
};
document.addEventListener("DOMContentLoaded", function() {
App.init()
});